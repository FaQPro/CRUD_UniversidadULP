/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadAPP;

import accesoAdatos.Coneccion;
import accesoAdatos.InscripcionData;
import accesoAdatos.MateriaData;
import java.util.ArrayList;
import static java.util.Collections.list;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidadAPP.Entidades.Ealumno;


/**
 *
 * @author perey
 */
public class AlumnosporMateria extends javax.swing.JInternalFrame {

    /**
     * Creates new form AlumnosporMateria
     */
    
    //Creamos el formato para la Jtable
    private DefaultTableModel formatoTabla = new DefaultTableModel();
    
    
    public AlumnosporMateria() {
        initComponents();
        //Llamo la funcion que limpia el formulario y la tabla por si tiene otros resultados
        limpioForm();
        //LLamo la funcion que carga la lista Combo
        cargoListaMat();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcbMateria = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtablaMateria = new javax.swing.JTable();
        jbsalir = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();

        jLabel1.setText("Listado de Alumnos por Materia");

        jLabel2.setText("Seleccione una materia :");

        jcbMateria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMateriaActionPerformed(evt);
            }
        });

        jtablaMateria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "DNI", "Apellido", "Nombre"
            }
        ));
        jScrollPane1.setViewportView(jtablaMateria);

        jbsalir.setText("Salir");
        jbsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbsalirActionPerformed(evt);
            }
        });

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel2)
                        .addGap(31, 31, 31)
                        .addComponent(jcbMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbBuscar)))
                .addContainerGap(88, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbsalir, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(100, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(100, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE)
                .addComponent(jbsalir)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(109, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(48, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbsalirActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jbsalirActionPerformed

    private void jcbMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMateriaActionPerformed
    //1ro, obtengo el idMateria de la materia seleccionada
    
    
        
        
        
    }//GEN-LAST:event_jcbMateriaActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        //ESTE ES EL CODIGO DEL BOTON BUSCAR
        //Debajo elimino el contenido de la tabla, util cuando se hace mas de una búsqueda
        while (formatoTabla.getRowCount()>0){
        formatoTabla.removeRow(0);
        }
     
        //Creo un nuevo objeto tipo Materia Data para acceder a los metodos y funciones
        MateriaData mat=new MateriaData();
        String materiaCombo;
        materiaCombo = (String) jcbMateria.getSelectedItem();
        //llamo a la funcion de materia Data, que recibe un nombre de materia (del combo) y devuelve
        //el id de la materia, que será usado para buscar en la tabla de inscripciones
        int idMat=mat.devuelveIdMateria(materiaCombo);
        
        //Creo un objeto de Inscripcion Data, para acceder a sus metodos y funciones
        InscripcionData insc = new InscripcionData();
        
        // Creo un array list de alumnos que va a contener el resultado de la busqueda SQL
        ArrayList<Ealumno> aluMat = new ArrayList<>();
        //Asigno en la variable aluMat el resultado de la funcion que devuelve justamente un array de 
        //alumnos que se encuentran inscriptios (ver codigo en Incripcion Data
        aluMat=(ArrayList<Ealumno>) insc.obtenerAlumnosporMateria(idMat);
        //Debajo recorro el Array list y voy agregando las filas a la Jtable
        for (Ealumno datos : aluMat){
        formatoTabla.addRow(new Object[]{datos.getIdAlumno(),datos.getDni(),datos.getApellido(),datos.getNombre()});
         
        
    }
    
    
    
    
    
    
    
    
        
        
    }//GEN-LAST:event_jbBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbsalir;
    private javax.swing.JComboBox<String> jcbMateria;
    private javax.swing.JTable jtablaMateria;
    // End of variables declaration//GEN-END:variables

public void cargoListaMat(){
    //Esta metodo utiliza la funcion MateriasTodas de Inscripcion data para cargar de datos el JComboBox
MateriaData mat=new MateriaData();
ArrayList<String> listadoMateriasCombo=new ArrayList<>();
listadoMateriasCombo=mat.MateriasTodas();
for (String nombreMat : listadoMateriasCombo){
    jcbMateria.addItem(nombreMat);
    
}

}
public void limpioForm(){
    //Metodo que limpia el formulario y le da formato a la tabla
    jcbMateria.removeAllItems();
    jtablaMateria.removeAll();
    formatearTabla();
    
    
}
private void formatearTabla(){
    //Metodo que le da formato a la tabla
    formatoTabla.addColumn("idAlumno");
    formatoTabla.addColumn("Dni");
    formatoTabla.addColumn("Apellido");
    formatoTabla.addColumn("Nombre");
    jtablaMateria.setModel(formatoTabla);
    
        
    }
                    
}



